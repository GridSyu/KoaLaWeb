// <auto-generated />
using System;
using KoaLaDessertWeb.Tools.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoaLaDessertWeb.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20250314072257_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoaLaDessertWeb.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("MessageTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Messagecontent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Specs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "這是一款美味的雜糧長棍，使用頂級原料製作而成，口感濃郁綿密。",
                            ImageUrl = "/images/p1.png",
                            Name = "法式雜糧長棍",
                            Price = 100m,
                            Specs = "500g"
                        },
                        new
                        {
                            Id = 2,
                            Description = "酥脆的牛角可頌，完美搭配早餐或下午茶。",
                            ImageUrl = "/images/p2.png",
                            Name = "牛角可頌",
                            Price = 80m,
                            Specs = "300g"
                        },
                        new
                        {
                            Id = 3,
                            Description = "健康又美味的雜糧吐司，適合全家享用。",
                            ImageUrl = "/images/p3.png",
                            Name = "雜糧吐司",
                            Price = 80m,
                            Specs = "300g"
                        },
                        new
                        {
                            Id = 4,
                            Description = "搭配新鮮水果的鬆餅，甜而不膩。",
                            ImageUrl = "/images/p4.png",
                            Name = "鮮果鬆餅",
                            Price = 80m,
                            Specs = "300g"
                        },
                        new
                        {
                            Id = 5,
                            Description = "酸甜可口的莓果派，下午茶最佳選擇。",
                            ImageUrl = "/images/p5.png",
                            Name = "莓果派",
                            Price = 80m,
                            Specs = "300g"
                        },
                        new
                        {
                            Id = 6,
                            Description = "香脆堅果搭配濃郁內餡，令人回味無窮。",
                            ImageUrl = "/images/p6.png",
                            Name = "堅果塔",
                            Price = 80m,
                            Specs = "300g"
                        });
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.ProductTag", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            TagId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            TagId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            TagId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            TagId = 2
                        });
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.PushMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PushMails");
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "麵包"
                        },
                        new
                        {
                            Id = 2,
                            Name = "甜點"
                        },
                        new
                        {
                            Id = 3,
                            Name = "季節限定"
                        });
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.ProductTag", b =>
                {
                    b.HasOne("KoaLaDessertWeb.Models.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoaLaDessertWeb.Models.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.Product", b =>
                {
                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("KoaLaDessertWeb.Models.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });
#pragma warning restore 612, 618
        }
    }
}
